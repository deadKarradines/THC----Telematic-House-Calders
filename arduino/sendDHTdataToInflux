#include "SoftwareSerial.h"
#include <DHT.h>
#include <DHT_U.h>
#include <Adafruit_Sensor.h>

#define DHTPIN 6     // what pin we're connected to
#define DHTPIN2 7     // what pin we're connected to
#define DHTTYPE DHT22   // DHT 22  (AM2302)

DHT dht(DHTPIN, DHTTYPE); //// Initialize DHT sensor for normal 16mhz Arduino
DHT dht2(DHTPIN2, DHTTYPE); //// Initialize DHT sensor for normal 16mhz Arduino
SoftwareSerial esp(2 , 3);// RX, TX

String MEAS_NAME = "DHT_01";
String MEAS_NAME2 = "DHT_02";

String ssid = "SOOM_000867";
String password = "GLD4SGYI55";
String server = "209.97.136.243"; 
String uri = "/write?db=CASA";

int chk;
float hum;       //Stores humidity value
float temp;        //Stores temperature value
String data;        //lo que enviaremos

void setup() {
  dht.begin();
  dht2.begin();
  esp.begin(9600);
  Serial.begin(9600);
  reset_esp();
  connectWifi();
}

//reset the esp8266 module
void reset_esp() {
  esp.println("AT+RST");
  delay(1000);
  if (esp.find("OK") ) 
      Serial.println("Module Reset");
}


//connect to your wifi network
void connectWifi() {
  String cmd = "AT+CWJAP=\"" + ssid + "\",\"" + password + "\"";
  Serial.println(cmd);
  esp.println(cmd);
  delay(5000);
  if (esp.find("OK")) {
    Serial.println("Connected!");
  }
  else {
    Serial.println("Cannot connect to wifi. Let's try again...");
    connectWifi();
  }
}


void loop () {
  hum = dht.readHumidity();
  temp = dht.readTemperature();

  Serial.print("Humidity: ");
  Serial.print(hum);
  Serial.print(" %, Temp: ");
  Serial.print(temp);
  Serial.println(" Celsius----");

  send_data_to_influx(MEAS_NAME, temp,hum);


  hum = dht2.readHumidity();
  temp = dht2.readTemperature();

  Serial.print("Humidity: ");
  Serial.print(hum);
  Serial.print(" %, Temp: ");
  Serial.print(temp);
  Serial.println(" Celsius----");

  send_data_to_influx(MEAS_NAME2, temp,hum);
 
  delay(5000);

}


void send_data_to_influx(String meas_name, float temp, float hum){
  data = "metriques temp" + String(meas_name)+"=" + String(temp) + ",hum"+String(meas_name)+"=" + String(hum);
  Serial.println(data);
  httppost();
}

void httppost () {
  esp.println("AT+CIPSTART=\"TCP\",\"" + server + "\",8086");//start a TCP connection.
  if ( esp.find("OK")) {
    Serial.println("TCP connection ready");
  } delay(1000);

  String postRequest =
    "POST " + uri + " HTTP/1.0\r\n" +
    "Host: " + server + "\r\n" +
    "Accept: *" + "/" + "*\r\n" +
    "Content-Length: " + data.length() + "\r\n" +
    "Content-Type: application/x-www-form-urlencoded\r\n" +
    "\r\n" + data;

  String sendCmd = "AT+CIPSEND=";//determine the number of caracters to be sent.

  esp.print(sendCmd);
  esp.println(postRequest.length() );
  delay(500);

  if (esp.find(">")) {
    Serial.println("Sending.."); esp.print(postRequest);
    if ( esp.find("SEND OK")) {
      Serial.println("Packet sent");

      while (esp.available()) {
        String tmpResp = esp.readString();
        Serial.println(tmpResp);
      }
      // close the connection
      esp.println("AT+CIPCLOSE");

    }
  }
}
